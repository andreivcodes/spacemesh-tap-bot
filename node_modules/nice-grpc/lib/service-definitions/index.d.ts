import * as grpc from '@grpc/grpc-js';
import { FromGrpcJsServiceDefinition } from './grpc-js';
import { FromTsProtoServiceDefinition, TsProtoServiceDefinition } from './ts-proto';
export declare type ServiceDefinition = {
    [method: string]: AnyMethodDefinition;
};
export declare type MethodDefinition<RequestIn, RequestOut, ResponseIn, ResponseOut, RequestStream extends boolean = boolean, ResponseStream extends boolean = boolean> = {
    path: string;
    requestStream: RequestStream;
    responseStream: ResponseStream;
    requestSerialize(value: RequestIn): Uint8Array;
    requestDeserialize(bytes: Uint8Array): RequestOut;
    responseSerialize(value: ResponseIn): Uint8Array;
    responseDeserialize(bytes: Uint8Array): ResponseOut;
    options: {
        idempotencyLevel?: 'IDEMPOTENT' | 'NO_SIDE_EFFECTS';
    };
};
export declare type AnyMethodDefinition = MethodDefinition<any, any, any, any>;
export declare type CompatServiceDefinition = ServiceDefinition | grpc.ServiceDefinition | TsProtoServiceDefinition;
export declare type NormalizedServiceDefinition<Service extends CompatServiceDefinition> = Service extends ServiceDefinition ? Service : Service extends grpc.ServiceDefinition ? FromGrpcJsServiceDefinition<Service> : Service extends TsProtoServiceDefinition ? FromTsProtoServiceDefinition<Service> : never;
