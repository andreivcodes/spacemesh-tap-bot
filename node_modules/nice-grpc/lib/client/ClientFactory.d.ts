import { Channel } from '@grpc/grpc-js';
import { CallOptions, ClientMiddleware } from 'nice-grpc-common';
import { CompatServiceDefinition, NormalizedServiceDefinition, ServiceDefinition } from '../service-definitions';
import { Client } from './Client';
export declare type ClientFactory<CallOptionsExt = {}> = {
    use<Ext>(middleware: ClientMiddleware<Ext, CallOptionsExt>): ClientFactory<CallOptionsExt & Ext>;
    create<Service extends CompatServiceDefinition>(definition: Service, channel: Channel, defaultCallOptions?: DefaultCallOptions<NormalizedServiceDefinition<Service>, CallOptionsExt>): Client<Service, CallOptionsExt>;
};
export declare type DefaultCallOptions<Service extends ServiceDefinition, CallOptionsExt = {}> = {
    [K in keyof Service | '*']?: CallOptions & Partial<CallOptionsExt>;
};
export declare function createClientFactory(): ClientFactory;
export declare function createClient<Service extends CompatServiceDefinition>(definition: Service, channel: Channel, defaultCallOptions?: DefaultCallOptions<NormalizedServiceDefinition<Service>>): Client<Service>;
